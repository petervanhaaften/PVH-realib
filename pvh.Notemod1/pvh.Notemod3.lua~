--[[
reads note data
puts each current note into origin buffer
have another buffer available, new note buffer
pull out each note from origin buffer, change pitch according to same index in new notes buffer
insert new note at same position as origin note
]]--


function Msg(str)
  reaper.ShowConsoleMsg(tostring(str) .. "\n")
end
-------------------------------
-- GLOBAL VARIABLES
-------------------------------
reaper.ClearConsole();

-- Get HWND
hwnd = reaper.MIDIEditor_GetActive()

-- Get current take being edited in MIDI Editor
take = reaper.MIDIEditor_GetTake(hwnd)

-- Loop through each selected note
retval, notes, ccs, sysex = reaper.MIDI_CountEvts(take) -- count all notes(events)
i = 0
check = 0
notes_selected=0

-- hold all data
p = {}
p.newnotes = {}
p.origstartppq = {}
p.origendppq = {}

-------------------------------
-- FUNCTIONS
-------------------------------
function makenoteBuffer()
   --builds note buffer of equal numnber elements to selected notes
   for i=0, notes-1 do --loops through all notes in take
      local retval, sel, muted, startppq, endppq, chan, pitch, vel = reaper.MIDI_GetNote(take, i)
      if sel == true then -- find which notes are selected
	 p.newnotes[i] = (60 + math.random(10)) --fill table with random pitch at each note index
	 p.origstartppq[i] = startppq --fill table with startppq values at each note index
	 p.origendppq[i] = endppq --fill table wiuth endppq values at each note index
      end
      i=i+1
   end
end


function getselectedNotes()
   for i=0, notes-1 do --loops through all notes in take
      local retval, sel, muted, startppq, endppq, chan, pitch, vel = reaper.MIDI_GetNote(take, i) --fill variables with data from each note
      if sel == true then -- find which notes are selected
	 check = check + 1 -- if notes selected add it to check count
      end
      i=i+1
   end
end

function compareBuffers()
   for i=0, notes-1 do --loops through all notes in take
      local retval, sel, muted, startppq, endppq, chan, pitch, vel = reaper.MIDI_GetNote(take, i) --fill variables with data from each note

      if sel == true then -- find which notes are selected
	 reaper.MIDI_InsertNote(take, sel, muted, p.origstartppq[i], p.origendppq[i], chan, p.newnotes[i], vel, false)
      end
      i=i+1
   end
end

-------------------------------
-- MAIN
-------------------------------

getselectedNotes()
makenoteBuffer()
compareBuffers()
